{"version":3,"file":"static/js/3437.dd542ea3.chunk.js","mappings":"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","sources":["components/UI/CustomReactSelect.js","components/UI/DeleteConfirmation.js","pages/Admin/UserMgt/AddModal.js","pages/Admin/UserMgt/UserMgt.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["import FormGroupContainer from \"./FormGroupContainer\";\r\nimport Select from \"react-select\";\r\n\r\nconst styles = {\r\n  control: (base) => ({\r\n    ...base,\r\n    minHeight: 56,\r\n    zindex: 99999,\r\n  }),\r\n  menu: (base) => ({ ...base, zIndex: 9999, position: \"\" }),\r\n};\r\nconst CustomReactSelect = ({\r\n  label,\r\n  onChange,\r\n  value,\r\n  onBlur,\r\n  validator,\r\n  options,\r\n  required = false,\r\n  disabled = false,\r\n  isMulti = false,\r\n  oldData = false,\r\n}) => {\r\n  return (\r\n    <FormGroupContainer required={required} label={label} oldData={oldData}>\r\n      <Select\r\n        isMulti={isMulti}\r\n        name={label}\r\n        options={options}\r\n        isDisabled={disabled}\r\n        onBlur={onBlur}\r\n        placeholder={label}\r\n        onChange={(e) => onChange(e)}\r\n        value={value}\r\n        styles={styles}\r\n      />\r\n      {validator}\r\n    </FormGroupContainer>\r\n  );\r\n};\r\n\r\nexport default CustomReactSelect;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport CustomButton from \"./CustomButton\";\r\n\r\nconst DeleteConfirmation = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      style={{\r\n        textAlign: \"center\",\r\n        fontFamily: \"Montserrat\",\r\n        margin: \"16px\",\r\n        borderRadius: \"8px\",\r\n      }}\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-title\"\r\n        style={{ backgroundColor: \"#fafafb\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontFamily: \"Montserrat\",\r\n            fontSize: \"22px\",\r\n            fontWeight: \"bold\",\r\n            fontStretch: \"normal\",\r\n            fontStyle: \"normal\",\r\n            lineHeight: 1.71,\r\n            letterSpacing: \"0.1px\",\r\n            textAlign: \"left\",\r\n            color: \"#92929d\",\r\n          }}\r\n        >\r\n          Delete {props.title} ?\r\n        </div>\r\n      </DialogTitle>\r\n      <Divider />\r\n      <DialogContent>\r\n        Are you sure you want to delete this{\" \"}\r\n        <span style={{ textTransform: \"lowercase\" }}>{props.title}</span>?\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <CustomButton\r\n          varient=\"contained\"\r\n          onclick={props.handleClose}\r\n          name=\"Cancel\"\r\n          styled={{ backgroundColor: \"red\" }}\r\n          size=\"large\"\r\n          fullWidth={true}\r\n        />\r\n        <CustomButton\r\n          varient=\"outlined\"\r\n          onclick={props.handleDelete}\r\n          name=\"Ok\"\r\n          size=\"large\"\r\n          fullWidth={true}\r\n        />\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DeleteConfirmation;\r\n","import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport CustomButton from \"../../../components/UI/CustomButton\";\r\nimport FormGroup from \"../../../components/UI/FormGroup\";\r\nimport CustomPhone from \"../../../components/UI/CustomPhone\";\r\n\r\nimport {\r\n  addSubAdmin,\r\n  updateSubAdmin,\r\n} from \"../../../redux/actions/Admin/AdminActions\";\r\nimport CustomReactSelect from \"../../../components/UI/CustomReactSelect\";\r\nimport ModalLoading from \"../../../components/UI/ModalLoading\";\r\nconst role = [\r\n  {\r\n    label: \"Directory Analyst\",\r\n    value: \"analyst\",\r\n  },\r\n  {\r\n    label: \"Admin Manager\",\r\n    value: \"manager\",\r\n  },\r\n  {\r\n    label: \"Compliance Officer\",\r\n    value: \"officer\",\r\n  },\r\n  {\r\n    label: \"Master Admin\",\r\n    value: \"master\",\r\n  },\r\n];\r\nconst AddModal = (props) => {\r\n  const simpleValidator = useRef(new SimpleReactValidator());\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators({ addSubAdmin, updateSubAdmin }, dispatch);\r\n  const [feedData, setFeedData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subRole: \"\",\r\n    contact: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (props.udata)\r\n      setFeedData(() => {\r\n        return {\r\n          ...props.udata,\r\n          subRole: role.find((a) => a.value === props.udata.subRole),\r\n        };\r\n      });\r\n    else\r\n      setFeedData(() => {\r\n        return {\r\n          name: \"\",\r\n          email: \"\",\r\n          subRole: \"\",\r\n          contact: \"\",\r\n        };\r\n      });\r\n  }, [props]);\r\n  const [, setDisplayError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const handleFeedBackSubmit = async () => {\r\n    if (simpleValidator.current.allValid()) {\r\n      setLoading(true);\r\n      const data = {\r\n        name: feedData.name,\r\n        email: feedData.email,\r\n        subRole: feedData.subRole.value,\r\n        role: \"admin\",\r\n        type: \"web\",\r\n      };\r\n      if (feedData.contact) {\r\n        data.contact = feedData.contact\r\n          .replace(\"(\", \"\")\r\n          .replace(\")\", \"\")\r\n          .replace(\"-\", \"\");\r\n      }\r\n      if (props.udata) {\r\n        delete data.email;\r\n        data.id = props.udata._id;\r\n        await actions.updateSubAdmin(data);\r\n      } else {\r\n        await actions.addSubAdmin(data);\r\n      }\r\n      setLoading(false);\r\n      simpleValidator.current.visibleFields = [];\r\n\r\n      setFeedData(() => {\r\n        return { name: \"\", email: \"\", subRole: \"\", contact: \"\" };\r\n      });\r\n      props.handleClose();\r\n    } else {\r\n      simpleValidator.current.showMessages();\r\n      await setDisplayError(() => true);\r\n    }\r\n  };\r\n\r\n  const setData = (field, data) =>\r\n    setFeedData((old) => {\r\n      return { ...old, [field]: data };\r\n    });\r\n\r\n  const blurSetup = async (field) => {\r\n    await setDisplayError(() => false);\r\n    simpleValidator.current.showMessageFor(field);\r\n    await setDisplayError(() => true);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      style={{\r\n        textAlign: \"center\",\r\n        fontFamily: \"Montserrat\",\r\n        margin: \"16px\",\r\n        borderRadius: \"8px\",\r\n      }}\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-title\"\r\n        style={{ backgroundColor: \"#fafafb\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontFamily: \"Montserrat\",\r\n            fontSize: \"22px\",\r\n            fontWeight: \"bold\",\r\n            fontStretch: \"normal\",\r\n            fontStyle: \"normal\",\r\n            lineHeight: 1.71,\r\n            letterSpacing: \"0.1px\",\r\n            textAlign: \"left\",\r\n            color: \"#92929d\",\r\n          }}\r\n        >\r\n          {props.udata ? \"Edit\" : \"Add\"} Sub Admin\r\n        </div>\r\n      </DialogTitle>\r\n      <Divider />\r\n      {loading ? (\r\n        <ModalLoading />\r\n      ) : (\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n              <FormGroup\r\n                label=\"Name\"\r\n                required={true}\r\n                type=\"text\"\r\n                value={feedData.name}\r\n                onChange={(data) => setData(\"name\", data)}\r\n                onBlur={() => blurSetup(\"Name\")}\r\n                validator={simpleValidator.current.message(\r\n                  \"Name\",\r\n                  feedData.name,\r\n                  \"required\",\r\n                  {\r\n                    className: \"errorClass\",\r\n                  }\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n              <FormGroup\r\n                label=\"Email\"\r\n                required={true}\r\n                type=\"text\"\r\n                disabled={props.udata ? true : false}\r\n                value={feedData.email}\r\n                onChange={(data) => setData(\"email\", data)}\r\n                onBlur={() => blurSetup(\"email\")}\r\n                validator={simpleValidator.current.message(\r\n                  \"email\",\r\n                  feedData.email,\r\n                  \"required|email\",\r\n                  {\r\n                    className: \"errorClass\",\r\n                  }\r\n                )}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n              <CustomReactSelect\r\n                required={true}\r\n                label={\"Role\"}\r\n                isMulti={false}\r\n                onBlur={() => blurSetup(\"Role\")}\r\n                validator={simpleValidator.current.message(\r\n                  \"Role\",\r\n                  feedData.subRole,\r\n                  \"required\",\r\n                  {\r\n                    className: \"errorClass\",\r\n                  }\r\n                )}\r\n                options={role}\r\n                value={feedData.subRole}\r\n                onChange={(e) => setData(\"subRole\", e)}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n              <CustomPhone\r\n                value={feedData.contact}\r\n                label=\"Phone Number\"\r\n                onChange={(e) => setData(\"contact\", e)}\r\n                onBlur={() => blurSetup(\"phone\")}\r\n                validator={simpleValidator.current.message(\r\n                  \"phone\",\r\n                  feedData.contact,\r\n                  \"phone\",\r\n                  {\r\n                    className: \"errorClass\",\r\n                  }\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={6} md={6} sm={6} xs={6}>\r\n              <CustomButton\r\n                name={props.udata ? \"Edit\" : \"Add\"}\r\n                varient=\"contained\"\r\n                size=\"large\"\r\n                fullWidth={true}\r\n                onclick={handleFeedBackSubmit}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={6} md={6} sm={6} xs={6}>\r\n              <CustomButton\r\n                varient=\"outlined\"\r\n                name=\"Cancel\"\r\n                onclick={props.handleClose}\r\n                size=\"large\"\r\n                fullWidth={true}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddModal;\r\n","import { Search } from \"@mui/icons-material\";\r\nimport { Stack, TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomButton from \"../../../components/UI/CustomButton\";\r\nimport DeleteConfirmation from \"../../../components/UI/DeleteConfirmation\";\r\nimport config from \"../../../config\";\r\nimport {\r\n  getSubAdmin,\r\n  deleteSubAdmin,\r\n} from \"../../../redux/actions/Admin/AdminActions\";\r\nimport { setTitle } from \"../../../redux/actions/theme/themeActions\";\r\nimport AddModal from \"./AddModal\";\r\nimport { debounce } from \"lodash\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport CancelToken from \"../../../utils/cancelClass\";\r\nconst ctc = new CancelToken();\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  aboutContainer: {\r\n    paddingTop: \"8em\",\r\n    width: \"90%\",\r\n    textAlign: \"center\",\r\n    margin: \"auto\",\r\n    paddingBottom: \"10em\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"95%\",\r\n    },\r\n  },\r\n\r\n  sortContainer: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n    background: \"white\",\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n  },\r\n  sortLabel: {\r\n    fontSize: \"14px\",\r\n    color: \"#696974\",\r\n    paddingTop: \"10px\",\r\n    paddingRight: \"10px\",\r\n  },\r\n}));\r\nconst UserMgt = (props) => {\r\n  const classes = useStyle();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setId] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  const [delId, setDelId] = useState(\"\");\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const debouncedSave = useCallback(\r\n    debounce((k) => getByName(k), 1000),\r\n    []\r\n  );\r\n  const getByName = async (k) => {\r\n    setLoading(true);\r\n    ctc.createToken();\r\n    const res = await actions.getSubAdmin(k, ctc.getToken());\r\n    if (res && res.length) {\r\n      setUserData(() => res);\r\n    } else {\r\n      setUserData(() => []);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators(\r\n    { setTitle, getSubAdmin, deleteSubAdmin },\r\n    dispatch\r\n  );\r\n\r\n  const handleKSearch = (k) => {\r\n    debouncedSave(k);\r\n    setKeyword(k);\r\n  };\r\n\r\n  const handleOpenModal = (i) => {\r\n    setId(() => i);\r\n    setOpen(() => true);\r\n  };\r\n  const handleCloseModal = () => {\r\n    setId(() => \"\");\r\n    setOpen(() => false);\r\n    getData();\r\n  };\r\n\r\n  const handleDeleteModalOpen = (id) => {\r\n    setDelId(() => id);\r\n    setDeleteModal(() => true);\r\n  };\r\n  const handleDeleteSubAdmin = async () => {\r\n    setDeleteModal(false);\r\n    setLoading(true);\r\n    if (delId) {\r\n      await actions.deleteSubAdmin(delId);\r\n      await getData();\r\n      setDelId(\"\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    ctc.createToken();\r\n    const res = await actions.getSubAdmin(\"\", ctc.getToken());\r\n    if (res && res.length) {\r\n      setUserData(() => res);\r\n    } else {\r\n      setUserData(() => []);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    actions.setTitle({ title: props.title });\r\n    getData();\r\n    return () => ctc.cancelTheApi();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"name\", headerName: \"Name\", flex: 1, minWidth: 120 },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      flex: 1,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      field: \"contact\",\r\n      headerName: \"Phone\",\r\n      width: 120,\r\n    },\r\n\r\n    {\r\n      field: \"subRole\",\r\n      headerName: \"Role\",\r\n      width: 120,\r\n    },\r\n\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      sortable: false,\r\n      filterable: false,\r\n      width: 180,\r\n\r\n      renderCell: (params) => {\r\n        return (\r\n          <div style={{ display: \"flex\", gap: \"5px\" }}>\r\n            <CustomButton\r\n              name={\"Edit\"}\r\n              varient={\"contained\"}\r\n              onclick={() => handleOpenModal(params.row)}\r\n            />\r\n            <CustomButton\r\n              name={\"Delete\"}\r\n              varient={\"contained\"}\r\n              styled={{ backgroundColor: \"red\" }}\r\n              onclick={() => handleDeleteModalOpen(params.row._id)}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.aboutContainer}>\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        style={{ marginBottom: \"20px\" }}\r\n        flexWrap=\"wrap\"\r\n      >\r\n        <div>\r\n          <Search style={{ marginTop: \"4px\", marginRight: \"3px\" }} />\r\n          <TextField\r\n            variant=\"standard\"\r\n            placeholder=\"Search User\"\r\n            value={keyword}\r\n            onChange={(e) => handleKSearch(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CustomButton\r\n            name=\"Add Admin User\"\r\n            className=\"w-100\"\r\n            varient={\"contained\"}\r\n            onclick={() => handleOpenModal(\"\")}\r\n          />\r\n        </div>\r\n      </Stack>\r\n      <div style={{ height: 550, overflow: \"auto\", width: \"100%\" }}>\r\n        <DataGrid\r\n          getRowId={(row) => row._id}\r\n          rows={userData || []}\r\n          disableExtendRowFullWidth={false}\r\n          columns={columns}\r\n          disableSelectionOnClick\r\n          loading={loading}\r\n          rowsPerPageOptions={[...config.pageSlot]}\r\n        />\r\n      </div>\r\n      <AddModal open={open} udata={id} handleClose={handleCloseModal} />\r\n      <DeleteConfirmation\r\n        open={deleteModal}\r\n        title=\"User\"\r\n        handleClose={() => setDeleteModal(false)}\r\n        handleDelete={() => handleDeleteSubAdmin()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMgt;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');"],"names":["styles","control","base","minHeight","zindex","menu","zIndex","position","label","onChange","value","onBlur","validator","options","required","disabled","isMulti","oldData","name","isDisabled","placeholder","e","props","open","onClose","handleClose","fullWidth","maxWidth","style","textAlign","fontFamily","margin","borderRadius","id","backgroundColor","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","color","title","textTransform","varient","onclick","styled","size","handleDelete","role","simpleValidator","useRef","SimpleReactValidator","dispatch","useDispatch","actions","bindActionCreators","addSubAdmin","updateSubAdmin","useState","email","subRole","contact","feedData","setFeedData","useEffect","udata","find","a","setDisplayError","loading","setLoading","handleFeedBackSubmit","current","allValid","data","type","replace","_id","visibleFields","showMessages","setData","field","old","blurSetup","showMessageFor","Dialog","DialogTitle","Divider","ModalLoading","DialogContent","Grid","container","spacing","item","lg","md","sm","xs","FormGroup","message","className","CustomReactSelect","CustomPhone","CustomButton","ctc","CancelToken","useStyle","makeStyles","theme","aboutContainer","paddingTop","width","paddingBottom","breakpoints","down","sortContainer","display","gap","background","padding","sortLabel","paddingRight","classes","setOpen","setId","userData","setUserData","delId","setDelId","deleteModal","setDeleteModal","keyword","setKeyword","debouncedSave","useCallback","debounce","k","getByName","createToken","getSubAdmin","getToken","res","length","setTitle","deleteSubAdmin","handleOpenModal","i","handleDeleteSubAdmin","getData","cancelTheApi","columns","headerName","flex","minWidth","sortable","filterable","renderCell","params","row","handleDeleteModalOpen","Stack","direction","justifyContent","marginBottom","flexWrap","Search","marginTop","marginRight","TextField","variant","target","height","overflow","DataGrid","getRowId","rows","disableExtendRowFullWidth","disableSelectionOnClick","rowsPerPageOptions","config","DeleteConfirmation","createSvgIcon","_jsx","d"],"sourceRoot":""}