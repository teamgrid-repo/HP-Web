{"version":3,"file":"static/js/3466.367c9517.chunk.js","mappings":"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","sources":["components/UI/DeleteConfirmation.js","pages/Admin/UserMgt/GeneralUserMgt.js"],"sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport CustomButton from \"./CustomButton\";\r\n\r\nconst DeleteConfirmation = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      style={{\r\n        textAlign: \"center\",\r\n        fontFamily: \"Montserrat\",\r\n        margin: \"16px\",\r\n        borderRadius: \"8px\",\r\n      }}\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-title\"\r\n        style={{ backgroundColor: \"#fafafb\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontFamily: \"Montserrat\",\r\n            fontSize: \"22px\",\r\n            fontWeight: \"bold\",\r\n            fontStretch: \"normal\",\r\n            fontStyle: \"normal\",\r\n            lineHeight: 1.71,\r\n            letterSpacing: \"0.1px\",\r\n            textAlign: \"left\",\r\n            color: \"#92929d\",\r\n          }}\r\n        >\r\n          Delete {props.title} ?\r\n        </div>\r\n      </DialogTitle>\r\n      <Divider />\r\n      <DialogContent>\r\n        Are you sure you want to delete this{\" \"}\r\n        <span style={{ textTransform: \"lowercase\" }}>{props.title}</span>?\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <CustomButton\r\n          varient=\"contained\"\r\n          onclick={props.handleClose}\r\n          name=\"Cancel\"\r\n          styled={{ backgroundColor: \"red\" }}\r\n          size=\"large\"\r\n          fullWidth={true}\r\n        />\r\n        <CustomButton\r\n          varient=\"outlined\"\r\n          onclick={props.handleDelete}\r\n          name=\"Ok\"\r\n          size=\"large\"\r\n          fullWidth={true}\r\n        />\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DeleteConfirmation;\r\n","import { MenuItem, Select, Stack } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomButton from \"../../../components/UI/CustomButton\";\r\nimport DeleteConfirmation from \"../../../components/UI/DeleteConfirmation\";\r\nimport config from \"../../../config\";\r\nimport {\r\n  getFrezeList,\r\n  deleteFrezeList,\r\n  updateFrezeList,\r\n} from \"../../../redux/actions/Admin/AdminActions\";\r\nimport { setTitle } from \"../../../redux/actions/theme/themeActions\";\r\nimport CancelToken from \"../../../utils/cancelClass\";\r\nconst ctc = new CancelToken();\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  aboutContainer: {\r\n    paddingTop: \"8em\",\r\n    width: \"90%\",\r\n    textAlign: \"center\",\r\n    margin: \"auto\",\r\n    paddingBottom: \"10em\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"95%\",\r\n    },\r\n  },\r\n\r\n  sortContainer: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n    background: \"white\",\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n  },\r\n  sortLabel: {\r\n    fontSize: \"14px\",\r\n    color: \"#696974\",\r\n    paddingTop: \"10px\",\r\n    paddingRight: \"10px\",\r\n  },\r\n}));\r\nconst GeneralUserMgt = (props) => {\r\n  const classes = useStyle();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [userData, setUserData] = useState([]);\r\n  const [oldData, setOldData] = useState([]);\r\n  const [order, setOrder] = useState(\"de\");\r\n  const [delId, setDelId] = useState(\"\");\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators(\r\n    { setTitle, getFrezeList, deleteFrezeList, updateFrezeList },\r\n    dispatch\r\n  );\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    setOrder(\"de\");\r\n    ctc.createToken();\r\n    const res = await actions.getFrezeList(\"user\", ctc.getToken());\r\n    if (res && res.length) {\r\n      setUserData(() => res);\r\n      setOldData(() => res);\r\n    } else {\r\n      setUserData(() => []);\r\n      setOldData(() => []);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    actions.setTitle({ title: props.title });\r\n    getData();\r\n    return () => ctc.cancelTheApi();\r\n  }, []);\r\n\r\n  const handleDeleteModalOpen = (id) => {\r\n    setDelId(() => id);\r\n    setDeleteModal(() => true);\r\n  };\r\n  const handleFrezeDelete = async (id, d, status) => {\r\n    setDeleteModal(false);\r\n\r\n    setLoading(true);\r\n    if (d) {\r\n      if (id) await actions.deleteFrezeList(\"user\", id);\r\n      setDelId(\"\");\r\n    } else {\r\n      await actions.updateFrezeList({ id: id, status: status, type: \"user\" });\r\n    }\r\n    await getData();\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleOrd = (o) => {\r\n    if (o !== \"de\") {\r\n      const fd = [];\r\n      switch (o) {\r\n        case 0: {\r\n          oldData.forEach((a) => {\r\n            if (a.freeze) fd.push(a);\r\n          });\r\n          break;\r\n        }\r\n        case 1: {\r\n          oldData.forEach((a) => {\r\n            if (!a.freeze) fd.push(a);\r\n          });\r\n          break;\r\n        }\r\n      }\r\n      setUserData(() => fd);\r\n    } else {\r\n      setUserData(() => oldData);\r\n    }\r\n    setOrder(o);\r\n  };\r\n  const columns = [\r\n    { field: \"name\", headerName: \"Name\", flex: 1, minWidth: 120 },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      flex: 1,\r\n      minWidth: 120,\r\n    },\r\n    {\r\n      headerName: \"Phone\",\r\n      minWidth: 120,\r\n      flex: 1,\r\n      field: \"profileId1\",\r\n      valueGetter: ({ row }) => {\r\n        let result = \"-\";\r\n        if (row.profileId && row.profileId.contact) {\r\n          result = row.profileId.contact;\r\n        }\r\n        return result;\r\n      },\r\n    },\r\n    {\r\n      headerName: \"Date Of Birth\",\r\n      minWidth: 120,\r\n      field: \"profileId2\",\r\n      valueGetter: ({ row }) => {\r\n        let result = \"-\";\r\n        if (row.profileId && row.profileId.dob) {\r\n          result = moment(row.profileId.dob).format(\"MMM, DD yyyy\");\r\n        }\r\n        return result;\r\n      },\r\n    },\r\n    {\r\n      headerName: \"Gender\",\r\n      field: \"profileId3\",\r\n      minWidth: 120,\r\n      valueGetter: ({ row }) => {\r\n        let result = \"-\";\r\n        if (row.profileId && row.profileId.gender) {\r\n          result = row.profileId.gender;\r\n        }\r\n        return result;\r\n      },\r\n    },\r\n\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      sortable: false,\r\n      filterable: false,\r\n      minWidth: 190,\r\n      flex: 1,\r\n      renderCell: ({ row }) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              gap: \"10px\",\r\n            }}\r\n          >\r\n            <CustomButton\r\n              name={row.freeze ? \"Unfreeze\" : \"Freeze\"}\r\n              varient={\"contained\"}\r\n              onclick={() => handleFrezeDelete(row._id, false, !row.freeze)}\r\n            />\r\n            <CustomButton\r\n              name={\"Delete\"}\r\n              styled={{ backgroundColor: \"red\" }}\r\n              varient={\"contained\"}\r\n              onclick={() => handleDeleteModalOpen(row._id)}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.aboutContainer}>\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        style={{ marginBottom: \"20px\" }}\r\n      >\r\n        <div className={classes.sortContainer}>\r\n          <div className={classes.sortLabel}>View:</div>\r\n          <Select\r\n            labelId=\"demo-simple-select-helper-label\"\r\n            id=\"demo-simple-select-helper\"\r\n            value={order}\r\n            size=\"small\"\r\n            variant=\"standard\"\r\n            onChange={(e) => handleOrd(e.target.value)}\r\n          >\r\n            <MenuItem value=\"de\">\r\n              <em>All</em>\r\n            </MenuItem>\r\n            <MenuItem value={0}>Freeze</MenuItem>\r\n            <MenuItem value={1}>Unfreeze</MenuItem>\r\n          </Select>\r\n        </div>\r\n      </Stack>\r\n      <div style={{ height: 550, overflow: \"auto\", width: \"100%\" }}>\r\n        <DataGrid\r\n          getRowId={(row) => row._id}\r\n          rows={userData || []}\r\n          disableExtendRowFullWidth={false}\r\n          columns={columns}\r\n          disableSelectionOnClick\r\n          loading={loading}\r\n          rowsPerPageOptions={[...config.pageSlot]}\r\n        />\r\n      </div>\r\n      <DeleteConfirmation\r\n        open={deleteModal}\r\n        title=\"General User\"\r\n        handleClose={() => setDeleteModal(false)}\r\n        handleDelete={() => handleFrezeDelete(delId, true, \"\")}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneralUserMgt;\r\n"],"names":["props","open","onClose","handleClose","fullWidth","maxWidth","style","textAlign","fontFamily","margin","borderRadius","id","backgroundColor","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","color","title","textTransform","varient","onclick","name","styled","size","handleDelete","ctc","CancelToken","useStyle","makeStyles","theme","aboutContainer","paddingTop","width","paddingBottom","breakpoints","down","sortContainer","display","gap","background","padding","sortLabel","paddingRight","classes","useState","loading","setLoading","userData","setUserData","oldData","setOldData","order","setOrder","delId","setDelId","deleteModal","setDeleteModal","dispatch","useDispatch","actions","bindActionCreators","setTitle","getFrezeList","deleteFrezeList","updateFrezeList","getData","createToken","getToken","res","length","useEffect","cancelTheApi","handleFrezeDelete","d","status","type","columns","field","headerName","flex","minWidth","valueGetter","row","result","profileId","contact","dob","moment","format","gender","sortable","filterable","renderCell","freeze","_id","className","direction","justifyContent","marginBottom","labelId","value","variant","onChange","e","o","fd","forEach","a","push","handleOrd","target","height","overflow","getRowId","rows","disableExtendRowFullWidth","disableSelectionOnClick","rowsPerPageOptions","config"],"sourceRoot":""}