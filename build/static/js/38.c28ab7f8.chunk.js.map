{"version":3,"file":"static/js/38.c28ab7f8.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/DeleteForever.js","components/SavedProviders/SavedProviderListComponent.js","pages/Private/SaveProvider.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  getAllList,\r\n  deleteList,\r\n} from \"../../redux/actions/Provider/ProviderActions\";\r\nimport { DeleteForever } from \"@mui/icons-material\";\r\nimport ListingComponent from \"../UI/ListingComponent\";\r\nimport HeaderComponent from \"./HeaderComponent\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DeleteConfirmation from \"../UI/DeleteConfirmation\";\r\nimport LoadingComponent from \"../UI/LoadingComponent\";\r\n\r\nconst SavedProviderListComponent = () => {\r\n  const loc = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [delId, setDelId] = useState(\"\");\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n\r\n  const action = bindActionCreators({ getAllList, deleteList }, dispatch);\r\n  const sp = useSelector((state) => state.provider.saveProviders);\r\n  const get = async () => {\r\n    setLoading(true);\r\n    await action.getAllList();\r\n    setLoading(false);\r\n  };\r\n\r\n  const loadData = () => {\r\n    if (sp) {\r\n      setData(sp);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [sp]);\r\n\r\n  const handleDeleteModalOpen = (id) => {\r\n    setDelId(() => id);\r\n    setDeleteModal(() => true);\r\n  };\r\n  const deleteL = async () => {\r\n    setDeleteModal(false);\r\n    setLoading(true);\r\n    if (delId) {\r\n      await action.deleteList(delId);\r\n      await action.getAllList();\r\n    }\r\n    setLoading(false);\r\n  };\r\n  //providerInfo\r\n  useEffect(() => {\r\n    get();\r\n  }, []);\r\n  const changeOrder = (o) => {\r\n    if (sp) {\r\n      if (o !== \"de\") {\r\n        const data1 = [...data];\r\n        if (o === 1) {\r\n          data1.sort((a, b) => a.name.localeCompare(b.name));\r\n        } else {\r\n          data1.sort((a, b) => b.name.localeCompare(a.name));\r\n        }\r\n        setData(data1);\r\n      } else {\r\n        setData(sp);\r\n      }\r\n    }\r\n  };\r\n  return loading ? (\r\n    <LoadingComponent />\r\n  ) : (\r\n    <ListingComponent>\r\n      <HeaderComponent edit={false} changeOrder={(o) => changeOrder(o)} />\r\n      <Grid container spacing={2} mt={5}>\r\n        {data && data.length ? (\r\n          data.map((p) => (\r\n            <Grid item lg={12} md={12} sm={12} xs={12} key={p._id}>\r\n              <div\r\n                style={{\r\n                  height: \"170px\",\r\n                  borderRadius: \"10px\",\r\n                  border: \"solid 1px #fff\",\r\n                  backgroundColor: \"#fff\",\r\n                  padding: \"20px 30px 20px 30px\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      fontFamily: \"Montserrat\",\r\n                      fontSize: \"18px\",\r\n                      fontWeight: 600,\r\n                      fontStretch: \"normal\",\r\n                      fontStyle: \"normal\",\r\n                      lineHeight: \"normal\",\r\n                      letterSpacing: \"normal\",\r\n                      textAlign: \"left\",\r\n                      color: \"#171725\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={() => loc(`/my-providers/${p._id}`)}\r\n                  >\r\n                    {p.name} ({p.directoryItems.length} Results)\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        gap: \"8px\",\r\n                        marginLeft: \"5px\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      {p.directoryItems && p.directoryItems.length\r\n                        ? p.directoryItems.map(\r\n                            (a, id) =>\r\n                              id < 2 && (\r\n                                <div\r\n                                  style={{\r\n                                    fontFamily: \"Montserrat\",\r\n                                    fontSize: \"18px\",\r\n                                    fontWeight: 600,\r\n                                    fontStretch: \"normal\",\r\n                                    fontStyle: \"normal\",\r\n                                    lineHeight: \"normal\",\r\n                                    letterSpacing: \"normal\",\r\n                                    textAlign: \"left\",\r\n                                    color: \"#7dbaaf\",\r\n                                  }}\r\n                                  key={a._id}\r\n                                >\r\n                                  {(a.siteDetails && a.siteDetails.name) || \"\"}\r\n                                </div>\r\n                              )\r\n                          )\r\n                        : null}\r\n                    </div>\r\n                  </div>\r\n                  <div onClick={() => handleDeleteModalOpen(p._id)}>\r\n                    <DeleteForever\r\n                      style={{ color: \"red\", cursor: \"pointer\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Grid item lg={12} md={12} xs={12} sm={12} textAlign={\"center\"}>\r\n            No Saved Provider List Found!\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      <DeleteConfirmation\r\n        open={deleteModal}\r\n        title=\"Provider List\"\r\n        handleClose={() => setDeleteModal(false)}\r\n        handleDelete={() => deleteL()}\r\n      />\r\n    </ListingComponent>\r\n  );\r\n};\r\n\r\nexport default SavedProviderListComponent;\r\n","import { bindActionCreators } from \"redux\";\r\nimport { setTitle } from \"../../redux/actions/theme/themeActions\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SavedProvidersComponent from \"../../components/SavedProviders/SavedProviderListComponent\";\r\n\r\nconst SaveProvider = (props) => {\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators({ setTitle }, dispatch);\r\n  useEffect(() => {\r\n    actions.setTitle({ title: props.title });\r\n  }, []);\r\n\r\n  return <SavedProvidersComponent />;\r\n};\r\n\r\nexport default SaveProvider;\r\n"],"names":["createSvgIcon","_jsx","d","loc","useNavigate","useState","loading","setLoading","dispatch","useDispatch","data","setData","delId","setDelId","deleteModal","setDeleteModal","action","bindActionCreators","getAllList","deleteList","sp","useSelector","state","provider","saveProviders","get","useEffect","deleteL","LoadingComponent","ListingComponent","HeaderComponent","edit","changeOrder","o","data1","sort","a","b","name","localeCompare","Grid","container","spacing","mt","length","map","p","item","lg","md","sm","xs","style","height","borderRadius","border","backgroundColor","padding","display","justifyContent","fontFamily","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","textAlign","color","cursor","onClick","_id","directoryItems","flexDirection","gap","marginLeft","marginTop","id","siteDetails","DeleteForever","DeleteConfirmation","open","title","handleClose","handleDelete","props","actions","setTitle"],"sourceRoot":""}