{"version":3,"file":"static/js/6031.8a58ab17.chunk.js","mappings":"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","sources":["components/Messages/ChatPersonCard.js","redux/actions/messages/MessagesActions.js","components/Messages/ChatLeftHBody.js","components/Messages/ChatLeftHeader.js","components/Messages/ChatRightHeader.js","components/Messages/SenderChatMsg.js","components/Messages/ReciveChatMsg.js","components/Messages/ChatRightMsg.js","components/Messages/MsgSendComp.js","components/Messages/MessageBodyContainer.js","components/Messages/MessgesComponent.js","pages/Private/Messages.js","redux/actions/client/clientActions.js"],"sourcesContent":["import { Avatar, Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport profileImg from \"../../assets/images/person-img.png\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  personCard: {\r\n    width: \"98%\",\r\n    height: \"74px\",\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n    padding: \"5px 8px 5px 8px\",\r\n  },\r\n  avatar: {\r\n    width: \"42px\",\r\n    height: \"42px\",\r\n    marginLeft: \"0px\",\r\n    marginRight: \"0px\",\r\n    margin: \"auto\",\r\n  },\r\n  rightContainer: {\r\n    marginLeft: \"0px\",\r\n    marginRight: \"0px\",\r\n    margin: \"auto\",\r\n    flexGrow: 1,\r\n  },\r\n  name: {\r\n    fontSize: \"14px\",\r\n    fontWeight: 600,\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"normal\",\r\n    letterSpacing: \"0.1px\",\r\n    textAlign: \"left\",\r\n    color: \"#171725\",\r\n    marginLeft: \"0px\",\r\n    margin: \"auto\",\r\n  },\r\n  lastMsg: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"normal\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"normal\",\r\n    letterSpacing: \"0.1px\",\r\n    textAlign: \"left\",\r\n    color: \"#92929d\",\r\n    whiteSpace: \"nowrap\",\r\n    wordBreak: \"break-all\",\r\n  },\r\n  lastTime: {\r\n    fontSize: \"12px\",\r\n    fontWeight: \"normal\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: 1.83,\r\n    letterSpacing: \"normal\",\r\n    textAlign: \"right\",\r\n    color: \"#92929d\",\r\n    marginRight: \"0px\",\r\n    margin: \"auto\",\r\n  },\r\n  upperDiv: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  active: {\r\n    backgroundColor: \"#7dbaaf\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  outerContainer: {\r\n    marginBottom: \"10px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  activeCardText: {\r\n    color: \"#fff !important\",\r\n  },\r\n  unread: {\r\n    backgroundColor: \"#f2f7ff\",\r\n    borderRadius: \"15px\",\r\n  },\r\n}));\r\n\r\nconst ChatPersonCard = (props) => {\r\n  const { name, id, lastTime, lastMsg, status, selRoom } = props;\r\n  const classes = useStyle();\r\n  const ms = useSelector((state) => state.msg.selRoom);\r\n  const container =\r\n    ms && ms.roomName && ms.roomName === props.room\r\n      ? classes.active\r\n      : status === \"unread\"\r\n      ? classes.unread\r\n      : \"\";\r\n  const color =\r\n    ms && ms.roomName && ms.roomName === props.room\r\n      ? `${classes.activeCardText} `\r\n      : \"\";\r\n  const getComaName = (name) => {\r\n    let mName = \"\";\r\n    if (name && name.length) {\r\n      name.forEach((n, i) => {\r\n        mName =\r\n          mName +\r\n          n.name +\r\n          `${name.length > 1 ? (i !== name.length - 1 ? \", \" : \"\") : \"\"}`;\r\n      });\r\n    }\r\n    return mName;\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      key={id}\r\n      className={classes.outerContainer}\r\n    >\r\n      <div className={classes.personCard + \" \" + container} onClick={selRoom}>\r\n        <Avatar\r\n          src={(name && name[0] && name[0].image) || profileImg}\r\n          className={classes.avatar}\r\n        />\r\n        <div className={classes.rightContainer}>\r\n          <div className={color + classes.upperDiv}>\r\n            <div className={color + classes.name}>{getComaName(name)}</div>\r\n            <div className={color + classes.lastTime}>\r\n              {lastTime ? moment(lastTime).format(\"hh:mm a\") : \"-\"} <br />\r\n              {lastTime ? moment(lastTime).format(\"MMM, DD yyyy\") : \"-\"}\r\n            </div>\r\n          </div>\r\n          <div className={color + classes.lastMsg}>\r\n            {lastMsg ? lastMsg.slice(0, 25) : \"-\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChatPersonCard;\r\n","import { toast } from \"react-toastify\";\r\nimport { api } from \"../../api/api\";\r\nimport { ERRORMSG, GET_MSG, GET_ROOMS } from \"../../constants\";\r\n\r\nexport const clearMsgs = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: GET_MSG,\r\n      payload: {\r\n        data: {\r\n          msgs: [],\r\n          id: \"\",\r\n          name: \"\",\r\n          roomName: \"\",\r\n          img: \"\",\r\n          sid: \"\",\r\n          group: false,\r\n          active: false,\r\n        },\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const getMsgs = (\r\n  id,\r\n  rid,\r\n  name,\r\n  img,\r\n  sid,\r\n  group,\r\n  active,\r\n  hippa = false,\r\n  role = \"\"\r\n) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(`message?roomName=${id}`, {}, \"get\");\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n        dispatch({\r\n          type: GET_MSG,\r\n          payload: {\r\n            data: {\r\n              msgs: res.data,\r\n              id: rid,\r\n              name: name,\r\n              roomName: id,\r\n              img,\r\n              sid: sid,\r\n              group: group,\r\n              active: active,\r\n              hippa: hippa,\r\n              role: role,\r\n            },\r\n          },\r\n        });\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\nexport const getRooms = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(`message-allRoom`, {}, \"get\");\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n        dispatch({ type: GET_ROOMS, payload: { data: res.data } });\r\n        return res.data;\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\n\r\nexport const checkRoom = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(`message_room`, data, \"post\");\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n        return res.data;\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\n\r\nexport const readStatus = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(`update-readStatus`, data, \"put\");\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\n\r\nexport const leaveOrdelete = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(`leave-delete-chat`, data, \"put\");\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\nexport const sendFileApi = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(`socket-upload`, data, \"postMultipart\");\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n        // dispatch({ type: \"GET_NEW_MSG\", payload: { data: res.data } });\r\n        return res.data;\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\n\r\nexport const searchMsg = (s) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: \"GET_NEW_SEARCH_STRING\", payload: { data: s } });\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\nexport const setResetSearch = (v) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: \"CLEAR_MSG_SEARCH\", payload: { data: v } });\r\n    } catch (error) {}\r\n  };\r\n};\r\n","import { Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ChatPersonCard from \"./ChatPersonCard\";\r\nimport { getMsgs } from \"../../redux/actions/messages/MessagesActions\";\r\nconst useStyle = makeStyles((theme) => ({\r\n  chatHbody: {\r\n    textAlign: \"left\",\r\n    padding: \"10px\",\r\n    width: \"100%\",\r\n    minHeight: \"500px\",\r\n    maxHeight: \"880px\",\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst ChatLeftHBody = () => {\r\n  const ms = useSelector((state) => state.msg.rooms);\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators({ getMsgs }, dispatch);\r\n  const selRoom = async (r) => {\r\n    let name = \"\";\r\n    if (r.name && r.name.length) {\r\n      r.name.forEach((n, i) => {\r\n        name =\r\n          name +\r\n          n.name +\r\n          `${r.name.length > 1 ? (i !== r.name.length - 1 ? \", \" : \"\") : \"\"}`;\r\n      });\r\n    }\r\n    await actions.getMsgs(\r\n      r.room,\r\n      r.id || \"\",\r\n      name,\r\n      (r && r.name && r.name[0] && r.name[0].image) || \"\",\r\n      r.group ? \"\" : r.rid || \"\",\r\n      r.group || false,\r\n      r.active || false,\r\n      r && r.name && r.name[0] ? r.name[0].hippa : false,\r\n      r && r.name && r.name[0] ? r.name[0].role : \"\"\r\n    );\r\n  };\r\n  //active\r\n  return (\r\n    <Grid item lg={12} md={12} sm={12} xs={12} className={classes.chatHbody}>\r\n      {ms &&\r\n        ms.length &&\r\n        ms.map((p) => (\r\n          <ChatPersonCard {...p} key={p.id} selRoom={() => selRoom(p)} />\r\n        ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChatLeftHBody;\r\n","import { Grid, IconButton, InputAdornment, TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  searchMsg,\r\n  setResetSearch,\r\n} from \"../../redux/actions/messages/MessagesActions\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  pluseIcon: {\r\n    height: \"18px\",\r\n    width: \"18px\",\r\n    marginRight: \"2px\",\r\n    marginTop: \"2px\",\r\n  },\r\n  pluseButtonContainer: {\r\n    display: \"inline-flex\",\r\n    fontSize: \"14px\",\r\n    fontWeight: 600,\r\n  },\r\n  headerMsgDiv: {\r\n    fontSize: \"24px\",\r\n    fontWeight: 600,\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: 1.5,\r\n    letterSpacing: \"0.1px\",\r\n    textAlign: \"center\",\r\n    color: \"#171725\",\r\n  },\r\n  leftHeaderDiv: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\nconst ChatLeftHeader = () => {\r\n  const classes = useStyle();\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const action = bindActionCreators({ searchMsg, setResetSearch }, dispatch);\r\n\r\n  useEffect(() => {\r\n    action.searchMsg(search);\r\n    if (search) {\r\n      action.setResetSearch(false);\r\n    } else {\r\n      action.setResetSearch(true);\r\n    }\r\n  }, [search]);\r\n\r\n  return (\r\n    <Grid item lg={12} md={12} sm={12} xs={12} marginBottom={2}>\r\n      <div className={classes.leftHeaderDiv}>\r\n        <div className={classes.headerMsgDiv}>Message</div>\r\n        {/* <CustomButton\r\n          varient=\"contained\"\r\n          name={\r\n            <div className={classes.pluseButtonContainer}>\r\n              <img src={Pluse} className={classes.pluseIcon} />\r\n              New\r\n            </div>\r\n          }\r\n        /> */}\r\n      </div>\r\n      <TextField\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        placeholder=\"Search Messages\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        // InputProps={{\r\n        //   endAdornment: (\r\n        //     <InputAdornment position=\"end\">\r\n        //       <IconButton\r\n        //         disabled={search ? false : true}\r\n        //         onClick={() => action.setNextSearch(true)}\r\n        //       >\r\n        //         <ArrowDropDownIcon fontSize=\"large\" />\r\n        //       </IconButton>\r\n        //     </InputAdornment>\r\n        //   ),\r\n        // }}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChatLeftHeader;\r\n","import { Avatar, Grid, IconButton, Menu, MenuItem } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Menu as MenuIcon } from \"@mui/icons-material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  clearMsgs,\r\n  leaveOrdelete,\r\n} from \"../../redux/actions/messages/MessagesActions\";\r\nimport {\r\n  getClients,\r\n  addClient,\r\n  deleteClient,\r\n} from \"../../redux/actions/client/clientActions\";\r\nimport HippaCoverdIcon from \"../../assets/images/HippaEntity.png\";\r\nimport profileImg from \"../../assets/images/person-img.png\";\r\n\r\nconst sxObj = {\r\n  overflow: \"visible\",\r\n  filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n  mt: 1,\r\n  \"& .MuiAvatar-root\": {\r\n    width: 32,\r\n    height: 32,\r\n    ml: -0.5,\r\n    mr: 1,\r\n  },\r\n  \"&:before\": {\r\n    content: '\"\"',\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 14,\r\n    width: 10,\r\n    height: 10,\r\n    bgcolor: \"background.paper\",\r\n    zIndex: 0,\r\n  },\r\n};\r\nconst useStyle = makeStyles((theme) => ({\r\n  headerContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    textAlign: \"center\",\r\n  },\r\n  innerContainer: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n  },\r\n  icon: {\r\n    width: \"19.1px\",\r\n    height: \"20px\",\r\n    color: \"#92929d\",\r\n    margin: \"auto\",\r\n    marginRight: \"15px\",\r\n  },\r\n  avatar: {\r\n    width: \"36px\",\r\n    height: \"36px\",\r\n    margin: \"auto\",\r\n  },\r\n  name: {\r\n    fontSize: \"18px\",\r\n    fontWeight: 600,\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"normal\",\r\n    letterSpacing: \"normal\",\r\n    textAlign: \"left\",\r\n    color: \"#171725\",\r\n    margin: \"auto\",\r\n  },\r\n  statusDiv: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"normal\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"normal\",\r\n    letterSpacing: \"0.1px\",\r\n    textAlign: \"left\",\r\n    color: \"#696974\",\r\n    margin: \"auto\",\r\n  },\r\n  separator: {\r\n    width: \"1px\",\r\n    height: \"20px\",\r\n    backgroundColor: \"#d8d8d8\",\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nconst ChatRightHeader = ({ handleReload, online }) => {\r\n  const classes = useStyle();\r\n\r\n  const ms = useSelector((state) => state.msg.selRoom);\r\n  const userRole = useSelector((state) => state.auth.user.role);\r\n  const cc = useSelector((state) => state.msg.clients);\r\n\r\n  const [clients, setClients] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators(\r\n    { leaveOrdelete, clearMsgs, getClients, addClient, deleteClient },\r\n    dispatch\r\n  );\r\n\r\n  const [enchorEl, setEnchorEl] = useState(null);\r\n  const [openP, setOpenP] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (cc) {\r\n      const data = [];\r\n      for (let i = 0; i < cc.length; i++) {\r\n        if (cc[i] && cc[i].userId && cc[i].userId._id)\r\n          data.push(cc[i].userId._id);\r\n      }\r\n      setClients(() => data);\r\n    }\r\n  }, [cc]);\r\n  const handleAddRemove = async (add, id) => {\r\n    handleClose();\r\n    if (id) {\r\n      if (add) {\r\n        await actions.addClient(id);\r\n      } else {\r\n        await actions.deleteClient(id);\r\n      }\r\n      await actions.getClients();\r\n    }\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setEnchorEl(event.currentTarget);\r\n    setOpenP(true);\r\n  };\r\n  const handleClose = () => {\r\n    setEnchorEl(null);\r\n    setOpenP(false);\r\n  };\r\n  const handleMenu = async (leave) => {\r\n    handleClose();\r\n    const data = { roomName: ms.roomName, delete: leave };\r\n    await actions.leaveOrdelete(data);\r\n    await actions.clearMsgs();\r\n    handleReload(false);\r\n  };\r\n  return (\r\n    <Grid item lg={12} md={12} sm={12} xs={12} marginBottom={4} marginLeft={2}>\r\n      <div className={classes.headerContainer}>\r\n        <div className={classes.innerContainer}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={(ms && ms.img) || profileImg}\r\n          />\r\n          <div className={classes.name}>\r\n            {\" \"}\r\n            {(ms && ms.name) || \"-\"}{\" \"}\r\n            {ms.hippa ? (\r\n              <img\r\n                src={HippaCoverdIcon}\r\n                style={{\r\n                  margin: \"auto\",\r\n                  marginLeft: \"0px\",\r\n                  marginRight: \"0\",\r\n                }}\r\n              />\r\n            ) : null}{\" \"}\r\n          </div>\r\n          <div className={classes.separator}></div>\r\n          <div className={classes.statusDiv}>\r\n            {ms.sid\r\n              ? online && online.length\r\n                ? online.find((o) => o === ms.sid)\r\n                  ? \"Online\"\r\n                  : \"Offline\"\r\n                : \"Offline\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        {ms ? (\r\n          <div className={classes.innerContainer}>\r\n            <IconButton onClick={handleClick}>\r\n              <MenuIcon className={classes.icons} />\r\n            </IconButton>\r\n\r\n            <Menu\r\n              open={openP}\r\n              anchorEl={enchorEl}\r\n              onClose={handleClose}\r\n              PaperProps={{\r\n                elevation: 0,\r\n                sx: { ...sxObj },\r\n              }}\r\n              transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n              anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n            >\r\n              {ms.group && ms.active ? (\r\n                <MenuItem onClick={() => handleMenu(false)}>\r\n                  Leave Chat\r\n                </MenuItem>\r\n              ) : null}\r\n              {!ms.group &&\r\n                userRole &&\r\n                userRole === \"provider\" &&\r\n                ms.sid &&\r\n                ms.role !== \"provider\" &&\r\n                typeof ms.sid === \"string\" && (\r\n                  <MenuItem\r\n                    onClick={() =>\r\n                      handleAddRemove(\r\n                        !clients.find((a) => a === ms.sid),\r\n                        ms.sid\r\n                      )\r\n                    }\r\n                  >\r\n                    {clients &&\r\n                    clients.length &&\r\n                    clients.find((a) => a === ms.sid)\r\n                      ? \"Remove Client\"\r\n                      : \"Add Client\"}\r\n                  </MenuItem>\r\n                )}\r\n              <MenuItem onClick={() => handleMenu(ms.group ? true : false)}>\r\n                Delete Chat\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChatRightHeader;\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport moment from \"moment\";\r\nimport ArticleIcon from \"@mui/icons-material/Article\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  senderCotainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    marginRight: \"10px\",\r\n  },\r\n  sendAvatar: {\r\n    width: \"32px\",\r\n    height: \"32px\",\r\n    position: \"relative\",\r\n    left: 15,\r\n    top: 15,\r\n  },\r\n  senderMessageContainer: {\r\n    margin: \"15px 0px 15px 0px\",\r\n    textAlign: \"left\",\r\n    padding: \"15px 19px 15px 19.1px\",\r\n    border: \"solid 1px #e2e2ea\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"20px\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"normal\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"1.71\",\r\n    letterSpacing: \"0.1px\",\r\n    color: \"#44444f\",\r\n    maxWidth: \"80%\",\r\n    overflow: \"auto\",\r\n    wordBreak: \"break-all\",\r\n  },\r\n  senderTime: {\r\n    margin: \"auto\",\r\n    marginLeft: \"2px\",\r\n    marginRight: 0,\r\n  },\r\n\r\n  reCotainer: {\r\n    display: \"flex\",\r\n  },\r\n  reAvatar: {\r\n    width: \"32px\",\r\n    height: \"32px\",\r\n    position: \"relative\",\r\n    left: 15,\r\n    top: 15,\r\n  },\r\n  reMessageContainer: {\r\n    margin: \"15px 0px 15px 0px\",\r\n    textAlign: \"left\",\r\n    padding: \"15px 19px 15px 19.1px\",\r\n    border: \"solid 1px #e2e2ea\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"20px\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"normal\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"1.71\",\r\n    letterSpacing: \"0.1px\",\r\n    textAlign: \"left\",\r\n    color: \"#44444f\",\r\n    maxWidth: \"80%\",\r\n    overflow: \"auto\",\r\n  },\r\n  reTime: {\r\n    fontSize: \"10px\",\r\n    marginLeft: \"auto\",\r\n    textAlign: \"right\",\r\n    color: \"black\",\r\n    fontWeight: 600,\r\n  },\r\n}));\r\nconst ChatMsg = (props) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className={classes.senderCotainer}>\r\n      <div className={classes.senderCotainer}>\r\n        {/* <Avatar\r\n          className={classes.sendAvatar}\r\n          src={(props.senderId && props.senderId.image) || \"\"}\r\n        /> */}\r\n        <div className={classes.senderMessageContainer}>\r\n          {props.imageFlag ? (\r\n            /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(props.text) ? (\r\n              <img\r\n                src={props.text}\r\n                style={{\r\n                  maxHeight: \"400px\",\r\n                  maxWidth: \"400px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => window.open(props.text)}\r\n              />\r\n            ) : (\r\n              <ArticleIcon\r\n                fontSize=\"large\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => window.open(props.text)}\r\n              />\r\n            )\r\n          ) : (\r\n            props.text\r\n          )}{\" \"}\r\n          <div className={classes.reTime}>\r\n            {props.time ? moment(props.time).format(\"MMM, DD yyyy\") : \"\"} <br />\r\n            {props.time ? moment(props.time).format(\"hh:mm a\") : \"\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMsg;\r\n","import ArticleIcon from \"@mui/icons-material/Article\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  reCotainer: {\r\n    display: \"flex\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  reAvatar: {\r\n    width: \"32px\",\r\n    height: \"32px\",\r\n    position: \"relative\",\r\n    right: 15,\r\n    top: 15,\r\n  },\r\n  reMessageContainer: {\r\n    margin: \"0px 0px 15px 0px\",\r\n    textAlign: \"left\",\r\n    padding: \"15px 19px 15px 19.1px\",\r\n    border: \"solid 1px #e2e2ea\",\r\n    backgroundColor: \"#f1f1f5\",\r\n    borderRadius: \"20px\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"normal\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"1.71\",\r\n    letterSpacing: \"0.1px\",\r\n    textAlign: \"left\",\r\n    color: \"#44444f\",\r\n    maxWidth: \"80%\",\r\n    wordBreak: \"break-all\",\r\n    overflow: \"auto\",\r\n  },\r\n  reTime: {\r\n    fontSize: \"10px\",\r\n    marginLeft: \"auto\",\r\n    textAlign: \"right\",\r\n    color: \"black\",\r\n    fontWeight: 600,\r\n  },\r\n  reMsg: {\r\n    marginLeft: \"8px\",\r\n    fontSize: \"10px\",\r\n    marginRight: \"auto\",\r\n    textAlign: \"left\",\r\n    color: \"green\",\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nconst ReciveChatMsg = (props) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.reCotainer}>\r\n      <div className={classes.reCotainer}>\r\n        <div>\r\n          <div className={classes.reMsg}>\r\n            {props.senderId && props.senderId.name}\r\n          </div>\r\n          <div className={classes.reMessageContainer}>\r\n            {props.imageFlag ? (\r\n              /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(props.text) ? (\r\n                <img\r\n                  src={props.text}\r\n                  style={{\r\n                    maxHeight: \"400px\",\r\n                    maxWidth: \"400px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => window.open(props.text)}\r\n                />\r\n              ) : (\r\n                <ArticleIcon\r\n                  fontSize=\"large\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => window.open(props.text)}\r\n                />\r\n              )\r\n            ) : (\r\n              props.text\r\n            )}{\" \"}\r\n            <div className={classes.reTime}>\r\n              {props.time ? moment(props.time).format(\"MMM, DD yyyy\") : \"\"}{\" \"}\r\n              <br />\r\n              {props.time ? moment(props.time).format(\"hh:mm a\") : \"\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <Avatar\r\n          className={classes.reAvatar}\r\n          src={(props.senderId && props.senderId.image) || \"\"}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReciveChatMsg;\r\n","import { Divider, Grid } from \"@mui/material\";\r\nimport SMsg from \"./SenderChatMsg\";\r\nimport RMsg from \"./ReciveChatMsg\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MiniSearch from \"minisearch\";\r\n\r\nconst ChatRightMsg = (props) => {\r\n  const { message, cu } = props;\r\n  const searchMsg = useSelector((state) => state.msg.searchString);\r\n  const [searchMsgState, setSearchMsg] = useState([]);\r\n  const [handleF, setHandleF] = useState(false);\r\n  const clearF = useSelector((state) => state.msg.clear);\r\n\r\n  let miniSearch = new MiniSearch({\r\n    fields: [\"text\"], // fields to index for full-text search\r\n    storeFields: [\r\n      \"_id\",\r\n      \"text\",\r\n      \"activeUserId\",\r\n      \"imageFlag\",\r\n      \"room\",\r\n      \"senderId\",\r\n      \"socketId\",\r\n      \"status\",\r\n      \"time\",\r\n    ],\r\n    searchOptions: {\r\n      prefix: true,\r\n      fuzzy: 0.2,\r\n    },\r\n  });\r\n\r\n  const msgForSearch = message.map((a) => {\r\n    return { ...a, id: a._id };\r\n  });\r\n  // Index all documents\r\n  miniSearch.addAll(msgForSearch);\r\n\r\n  useEffect(() => {\r\n    scrollToBottomFun();\r\n  }, [props]);\r\n  \r\n  const scrollToBottomFun = () => {\r\n    var chatHistory = document.getElementById(\"needScroll\");\r\n    chatHistory.scrollTop = chatHistory.scrollHeight;\r\n  };\r\n  useEffect(() => {\r\n    if (searchMsg && searchMsg.length && message && message.length) {\r\n      let results = miniSearch.search(searchMsg);\r\n      setSearchMsg(() => results);\r\n      setHandleF(true);\r\n    }\r\n  }, [searchMsg]);\r\n  useEffect(() => {\r\n    if (clearF) {\r\n      setSearchMsg([]);\r\n      setHandleF(false);\r\n    }\r\n  }, [clearF]);\r\n  useEffect(() => {\r\n    scrollToBottomFun();\r\n  }, [handleF]);\r\n  return (\r\n    <Grid item lg={12} md={12} sm={12} xs={12} marginTop={2}>\r\n      <div id=\"needScroll\" style={{ height: \"850px\", overflow: \"auto\" }}>\r\n        {handleF ? (\r\n          searchMsgState && searchMsgState.length ? (\r\n            searchMsgState.map((data) =>\r\n              data.senderId ? (\r\n                data.senderId._id === cu.id ? (\r\n                  <SMsg {...data} key={data._id} />\r\n                ) : (\r\n                  <RMsg {...data} key={data._id} />\r\n                )\r\n              ) : null\r\n            )\r\n          ) : (\r\n            <h5>No Message</h5>\r\n          )\r\n        ) : message && message.length ? (\r\n          message.map((data) =>\r\n            data.senderId ? (\r\n              data.senderId._id === cu.id ? (\r\n                <SMsg {...data} key={data._id} />\r\n              ) : (\r\n                <RMsg {...data} key={data._id} />\r\n              )\r\n            ) : null\r\n          )\r\n        ) : (\r\n          <h5>No Message</h5>\r\n        )}\r\n        {/* <div style={{ float: \"left\", clear: \"both\" }} ref={inputEl}></div> */}\r\n      </div>\r\n      <Divider />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChatRightMsg;\r\n","import { useEffect, useState } from \"react\";\r\nimport { AttachFileRounded, ArrowRightAlt } from \"@mui/icons-material\";\r\nimport { ButtonBase, Grid, Input, InputAdornment } from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nimport { sendFileApi } from \"../../redux/actions/messages/MessagesActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ModalLoading from \"../UI/ModalLoading\";\r\n\r\nconst MsgSendComp = ({ socket, cu, ms }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators({ sendFileApi }, dispatch);\r\n  const sendMessage = (e) => {\r\n    if (e) e.preventDefault();\r\n    if (text) {\r\n      const data = {\r\n        senderId: cu.id,\r\n        text,\r\n        room: ms.roomName,\r\n        time: new Date().toString(),\r\n        imageFlag: false,\r\n      };\r\n      setText(\"\");\r\n      socket.emit(\"sendMessage\", data, () => setText(\"\"));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const f = document.getElementById(\"my-file\");\r\n    if (f) f.addEventListener(\"change\", uploadFile);\r\n\r\n    return () => {\r\n      if (f) f.removeEventListener(\"change\", uploadFile);\r\n    };\r\n  }, [ms, loading]);\r\n  const selectLogic = () => {\r\n    const f = document.getElementById(\"my-file\");\r\n    f.click();\r\n  };\r\n  const uploadFile = async (e) => {\r\n    const file = (e && e.target.files[0]) || \"\";\r\n    const size = file.size ? file.size / 1024 / 1024 : false;\r\n    if (file && size && size < 25) {\r\n      setLoading(true);\r\n      let formData = new FormData();\r\n      formData.append(\"image\", file);\r\n      formData.append(\"senderId\", cu.id);\r\n      formData.append(\"text\", \"\");\r\n      formData.append(\"room\", ms.roomName);\r\n      formData.append(\"time\", new Date().toString());\r\n      formData.append(\"imageFlag\", true);\r\n      const data = await actions.sendFileApi(formData);\r\n      if (data) {\r\n        socket.emit(\r\n          \"sendMessage\",\r\n          { ...data, alreadySaved: true },\r\n          (s) => {}\r\n          // console.log(s)\r\n        );\r\n      }\r\n      setLoading(false);\r\n    } else {\r\n      toast.error(\"You Only Upload Upto 25Mb Document\");\r\n    }\r\n  };\r\n  return (\r\n    <Grid item lg={12} md={12} sm={12} xs={12} marginTop={2}>\r\n      <div style={{ display: \"flex\", gap: \"10px\", margin: \"10px\" }}>\r\n        {ms.active ? (\r\n          loading ? (\r\n            <ModalLoading />\r\n          ) : (\r\n            <Input\r\n              id=\"standard-adornment-amount\"\r\n              placeholder=\"Write messages down here…\"\r\n              fullWidth\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <ButtonBase onClick={() => selectLogic()}>\r\n                    <AttachFileRounded />\r\n                    <input type=\"file\" hidden multiple={false} id=\"my-file\" />\r\n                  </ButtonBase>\r\n                  <ButtonBase onClick={() => sendMessage()}>\r\n                    <ArrowRightAlt />\r\n                  </ButtonBase>\r\n                </InputAdornment>\r\n              }\r\n              style={{\r\n                borderRadius: \"3px\",\r\n                border: \"solid 1px #d5d5dc\",\r\n                backgroundColor: \"#fafafb\",\r\n                paddingLeft: \"8px\",\r\n              }}\r\n              color=\"success\"\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n              onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\r\n            />\r\n          )\r\n        ) : (\r\n          <h2 style={{ margin: \"auto\" }}>You have already left this group.</h2>\r\n        )}\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MsgSendComp;\r\n","import { Divider, Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useEffect, useState, memo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ChatLeftHBody from \"./ChatLeftHBody\";\r\nimport ChatLeftHeader from \"./ChatLeftHeader\";\r\nimport ChatRightHeader from \"./ChatRightHeader\";\r\nimport ChatRightMsg from \"./ChatRightMsg\";\r\nimport { readStatus } from \"../../redux/actions/messages/MessagesActions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport MsgSendComp from \"./MsgSendComp\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  msgCard: {\r\n    background: \"white\",\r\n    borderRadius: \"5px\",\r\n    padding: \"21px 10px 21px 10px\",\r\n    minWidth: \"800px\",\r\n    overflow: \"auto\",\r\n  },\r\n  pluseIcon: {\r\n    height: \"18px\",\r\n    width: \"18px\",\r\n    marginRight: \"2px\",\r\n    marginTop: \"2px\",\r\n  },\r\n  pluseButtonContainer: {\r\n    display: \"inline-flex\",\r\n    fontSize: \"14px\",\r\n    fontWeight: 600,\r\n  },\r\n  headerMsgDiv: {\r\n    fontSize: \"24px\",\r\n    fontWeight: 600,\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: 1.5,\r\n    letterSpacing: \"0.1px\",\r\n    textAlign: \"center\",\r\n    color: \"#171725\",\r\n  },\r\n}));\r\n\r\nconst MessageBodyContainer = ({ socket, cu, handleReload, online }) => {\r\n  const classes = useStyle();\r\n\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators({ readStatus }, dispatch);\r\n\r\n  const ms = useSelector((state) => state.msg.selRoom);\r\n  // const newMsgFile = useSelector((state) => state.msg.newMsg);\r\n\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [messageBody, setMessageBody] = useState([]);\r\n\r\n  const loadMsg = () => {\r\n    setRoomId(ms.id);\r\n    setMessageBody(() => ms.msgs);\r\n    if (ms.roomName) actions.readStatus({ roomName: ms.roomName });\r\n    if (ms.active) socket.emit(\"CLIENT_JOINED\", { room: ms.roomName });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ms && roomId !== ms.id) {\r\n      loadMsg();\r\n    }\r\n  }, [ms]);\r\n  useEffect(() => {\r\n    if (ms.active)\r\n      socket.on(\"new_message\", (message) => {\r\n        setMessageBody((msg) => {\r\n          return [...msg, message];\r\n        });\r\n      });\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   if (newMsgFile) {\r\n  //     setMessageBody((msg) => {\r\n  //       return [...msg, newMsgFile];\r\n  //     });\r\n  //   }\r\n  // }, [newMsgFile]);\r\n  return (\r\n    <div className={classes.msgCard}>\r\n      <Grid container className={classes.msgContainer}>\r\n        <Grid item lg={3.5} md={3.5} xs={3.5} sm={3.5}>\r\n          <ChatLeftHeader />\r\n          <ChatLeftHBody />\r\n        </Grid>\r\n        <Grid item lg={0.1} md={0.1} xs={0.1} sm={0.1}>\r\n          <div style={{ height: \"100%\" }}>\r\n            <Divider orientation=\"vertical\" variant=\"fullWidth\" />\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={8.4}\r\n          md={8.4}\r\n          xs={8.4}\r\n          sm={8.4}\r\n          justifyContent=\"flex-start\"\r\n        >\r\n          <ChatRightHeader handleReload={handleReload} online={online} />\r\n          <ChatRightMsg message={messageBody} cu={cu} />\r\n          <MsgSendComp socket={socket} cu={cu} ms={ms} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MessageBodyContainer);\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MessageBodyContainer from \"./MessageBodyContainer\";\r\nimport {\r\n  getMsgs,\r\n  getRooms,\r\n  checkRoom,\r\n} from \"../../redux/actions/messages/MessagesActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport config from \"../../config\";\r\nimport { io } from \"socket.io-client\";\r\nimport { getIdRole } from \"../../redux/actions/profile/profileActions\";\r\nimport { getClients } from \"../../redux/actions/client/clientActions\";\r\nimport LoadingComponent from \"../UI/LoadingComponent\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  mainContianer: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    background: \"#fafafb\",\r\n    fontFamily: \"Montserrat\",\r\n  },\r\n  subContainer: {\r\n    padding: \"4em 0px 2em 0px\",\r\n    width: \"90%\",\r\n    textAlign: \"center\",\r\n    margin: \"auto\",\r\n    overflow: \"auto\",\r\n    [theme.breakpoints.down(\"lg\")]: {\r\n      width: \"99%\",\r\n    },\r\n  },\r\n}));\r\nconst socket = io.connect(config.socketUrl);\r\n\r\nconst MessgesComponent = () => {\r\n  const classes = useStyle();\r\n  const parms = useParams();\r\n  const [loader, setLoader] = useState(true);\r\n  const [cu, setCu] = useState(\"\");\r\n  const [online, setOnline] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators(\r\n    {\r\n      getMsgs,\r\n      getRooms,\r\n      checkRoom,\r\n      getIdRole,\r\n      getClients,\r\n    },\r\n    dispatch\r\n  );\r\n  const userRec = useSelector((state) => state.auth.user);\r\n\r\n  const getComaName = (name) => {\r\n    let mName = \"\";\r\n    if (name && name.length) {\r\n      name.forEach((n, i) => {\r\n        mName =\r\n          mName +\r\n          n.name +\r\n          `${name.length > 1 ? (i !== name.length - 1 ? \", \" : \"\") : \"\"}`;\r\n      });\r\n    }\r\n    return mName;\r\n  };\r\n\r\n  const getData = async (d) => {\r\n    setLoader(true);\r\n    const user = actions.getIdRole();\r\n    setCu(() => user);\r\n    const [id1, id2] = parms.id.split(\"-\");\r\n    let res = {};\r\n    if (id1 && id2 && d) {\r\n      res = await actions.checkRoom({\r\n        userId: [id2],\r\n        group: false,\r\n        roomName: `${id1}-${id2}`,\r\n      });\r\n    }\r\n    const rooms = await actions.getRooms();\r\n    if (id1 && id2 && res && res.room) {\r\n      await actions.getMsgs(\r\n        res.room,\r\n        res.userId[0]._id || \"\",\r\n        res.userId[0].name || \"\",\r\n        res.image || \"\",\r\n        res.userId[0]._id || \"\",\r\n        res.group || false,\r\n        res.active || false,\r\n        res.userId[0].hippa || false,\r\n        res.userId[0].role || \"\"\r\n      );\r\n    } else if (rooms && rooms.length && rooms[0] && rooms[0].room) {\r\n      if (parms.id === \"xyz\" || !d) {\r\n        await actions.getMsgs(\r\n          rooms[0].room,\r\n          rooms[0].id,\r\n          getComaName(rooms[0].name),\r\n          (rooms[0].name && rooms[0].name[0] && rooms[0].name[0].image) || \"\",\r\n          rooms[0].group ? \"\" : rooms[0].rid || \"\",\r\n          rooms[0].group || false,\r\n          rooms[0].active || false,\r\n          rooms[0].name && rooms[0].name[0] ? rooms[0].name[0].hippa : false,\r\n          rooms[0].name && rooms[0].name[0] ? rooms[0].name[0].name : \"\"\r\n        );\r\n      } else {\r\n        const d = rooms.find((r) => r.room === parms.id);\r\n        if (d) {\r\n          await actions.getMsgs(\r\n            d.room,\r\n            d.id,\r\n            getComaName(d.name),\r\n            (d.name && d.name[0] && d.name[0].image) || \"\",\r\n            d.group ? \"\" : d.rid || \"\",\r\n            d.group || false,\r\n            d.active || false,\r\n            d.name && d.name[0] ? d.name[0].hippa : false,\r\n            d.name && d.name[0] ? d.name[0].role : \"\"\r\n          );\r\n        } else {\r\n          await actions.getMsgs(\r\n            rooms[0].room,\r\n            rooms[0].id,\r\n            getComaName(rooms[0].name),\r\n            (rooms[0].name && rooms[0].name[0] && rooms[0].name[0].image) || \"\",\r\n            rooms[0].group ? \"\" : rooms[0].rid || \"\",\r\n            rooms[0].group || false,\r\n            rooms[0].active || false,\r\n            rooms[0].name && rooms[0].name[0] ? rooms[0].name[0].hippa : false,\r\n            rooms[0].name && rooms[0].name[0] ? rooms[0].name[0].role : \"\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n    setLoader(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userRec) getData(true);\r\n  }, [parms]);\r\n  useEffect(() => {\r\n    const { id } = actions.getIdRole();\r\n    if (id) {\r\n      socket.emit(\"newUser\", { senderId: id });\r\n\r\n      socket.on(\"allUser\", (user) => {\r\n        setOnline(() => Object.keys(user));\r\n      });\r\n    }\r\n    if (userRec && userRec.role === \"provider\") {\r\n      getClientFromServer();\r\n    }\r\n  }, []);\r\n  const getClientFromServer = async () => {\r\n    await actions.getClients();\r\n  };\r\n  return (\r\n    <div className={classes.mainContianer}>\r\n      <div className={classes.subContainer}>\r\n        {loader ? (\r\n          <LoadingComponent />\r\n        ) : (\r\n          <MessageBodyContainer\r\n            socket={socket}\r\n            cu={cu}\r\n            handleReload={userRec ? getData : null}\r\n            online={online || []}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessgesComponent;\r\n","import { bindActionCreators } from \"redux\";\r\nimport { setTitle } from \"../../redux/actions/theme/themeActions\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MessgesComponent from \"../../components/Messages/MessgesComponent\";\r\nconst Messages = (props) => {\r\n  const dispatch = useDispatch();\r\n  const actions = bindActionCreators({ setTitle }, dispatch);\r\n  useEffect(() => {\r\n    actions.setTitle({ title: props.title });\r\n  }, []);\r\n  return <MessgesComponent />;\r\n};\r\n\r\nexport default Messages;\r\n","import { toast } from \"react-toastify\";\r\nimport { api } from \"../../api/api\";\r\nimport { ERRORMSG } from \"../../constants\";\r\n\r\nexport const getClients = (token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(`saved-client`, {}, \"get\", token);\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n        dispatch({ type: \"GET_NEW_Clients\", payload: { data: res.data } });\r\n        return res.data;\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getClientsByname = (k, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(\r\n        `search-savedClient?keyword=${k}`,\r\n        {},\r\n        \"get\",\r\n        token\r\n      );\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n        return res.data;\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteClient = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(`saved-client/${id}`, {}, \"delete\");\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n        toast.success(res.message);\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addClient = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api(`saved-client?clientId=${id}`, {}, \"post\");\r\n\r\n      if (res && res.code && res.code === 200 && res.success) {\r\n        toast.success(res.message);\r\n      } else {\r\n        toast.error((res && res.message) || ERRORMSG);\r\n      }\r\n    } catch (error) {\r\n      toast.error(ERRORMSG);\r\n    }\r\n  };\r\n};\r\n"],"names":["useStyle","makeStyles","theme","personCard","width","height","display","gap","padding","avatar","marginLeft","marginRight","margin","rightContainer","flexGrow","name","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","textAlign","color","lastMsg","whiteSpace","wordBreak","lastTime","upperDiv","justifyContent","active","backgroundColor","borderRadius","outerContainer","marginBottom","cursor","activeCardText","unread","props","id","status","selRoom","classes","ms","useSelector","state","msg","container","roomName","room","Grid","item","lg","md","sm","xs","className","onClick","Avatar","src","image","profileImg","mName","length","forEach","n","i","getComaName","moment","format","slice","clearMsgs","dispatch","type","GET_MSG","payload","data","msgs","img","sid","group","getMsgs","rid","hippa","role","api","res","code","success","toast","message","ERRORMSG","getRooms","GET_ROOMS","checkRoom","readStatus","leaveOrdelete","sendFileApi","searchMsg","s","error","setResetSearch","v","chatHbody","minHeight","maxHeight","overflowX","rooms","useDispatch","actions","bindActionCreators","r","map","p","key","pluseIcon","marginTop","pluseButtonContainer","headerMsgDiv","leftHeaderDiv","useState","search","setSearch","action","useEffect","TextField","variant","fullWidth","placeholder","value","onChange","e","target","sxObj","overflow","filter","mt","ml","mr","content","position","top","right","bgcolor","zIndex","headerContainer","innerContainer","icon","statusDiv","separator","handleReload","online","userRole","auth","user","cc","clients","setClients","getClients","addClient","deleteClient","enchorEl","setEnchorEl","openP","setOpenP","userId","_id","push","handleAddRemove","add","handleClose","handleMenu","leave","delete","HippaCoverdIcon","style","find","o","IconButton","event","currentTarget","icons","Menu","open","anchorEl","onClose","PaperProps","elevation","sx","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","a","senderCotainer","sendAvatar","left","senderMessageContainer","border","maxWidth","senderTime","reCotainer","reAvatar","reMessageContainer","reTime","imageFlag","test","text","window","Article","time","reMsg","senderId","cu","searchString","searchMsgState","setSearchMsg","handleF","setHandleF","clearF","clear","miniSearch","MiniSearch","fields","storeFields","searchOptions","prefix","fuzzy","msgForSearch","addAll","scrollToBottomFun","chatHistory","document","getElementById","scrollTop","scrollHeight","results","Divider","socket","setText","loading","setLoading","sendMessage","preventDefault","Date","toString","emit","f","addEventListener","uploadFile","removeEventListener","file","files","size","formData","FormData","append","alreadySaved","ModalLoading","Input","endAdornment","InputAdornment","ButtonBase","click","AttachFileRounded","hidden","multiple","ArrowRightAlt","paddingLeft","onKeyPress","msgCard","background","minWidth","MessageBodyContainer","roomId","setRoomId","messageBody","setMessageBody","on","msgContainer","orientation","memo","mainContianer","fontFamily","subContainer","breakpoints","down","io","config","parms","useParams","loader","setLoader","setCu","setOnline","getIdRole","userRec","getData","d","split","id1","id2","Object","keys","getClientFromServer","LoadingComponent","setTitle","title","token","getClientsByname","k"],"sourceRoot":""}